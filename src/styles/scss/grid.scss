//a besoin d'un coup de gulp
$columns : 12!default;
$gutters : 20px!default;
$step : .5!default;
$flottant :'left';

$xs : 300px;
$sm : 576px;
$md : 768px;
$lg : 992px;
$xl : 1200px;

%col {
  position:relative;
  display:block;
  float:#{$flottant};
  padding:$gutters / 4;
  margin:0 auto;
}

%clearfix {
  &::before, &::after {
    display: block;
    content: "";
    clear: both;
  }
}

//mixin
@mixin prefix($pb: '') {

  .d-#{$pb}-none {display:none;}
  .d-#{$pb}-block {display:block;}
  .d-#{$pb}-inline {display:inline;}
  .d-#{$pb}-inline-block {display:inline-block;}
  //utile pour xs
  .#{$pb}-center {text-align:center;}
  .#{$pb}-init {text-align:inherit;}

  @for $k from 1 through $columns {
    .col-#{$pb}-#{$k} {
      width: $k / $columns * 100%;
    }
    @if($k <= 8) {
      .offset-#{$pb}-#{$k} {
        margin-left:$k / $columns * 100%;
      }
    }
  }
  @for $k from 5 through $step {
    @if($k != 0) {
        .text-#{$pb}-#{$k} {font-size:calc(100% + #{$step * $k+rem});}
    }
    .m-#{$pb}-#{$k} {margin:$step * $k+rem;}
    .mt-#{$pb}-#{$k} {margin-top:$step * $k+rem;}
    .mb-#{$pb}-#{$k} {margin-bottom:$step * $k+rem;}
    .ml-#{$pb}-#{$k} {margin-left:$step * $k+rem;}
    .mr-#{$pb}-#{$k} {margin-right:$step * $k+rem;}
    .mx-#{$pb}-#{$k} {
      margin-right:$step * $k+rem;
      margin-left:$step * $k+rem;
    }
    .my-#{$pb}-#{$k} {
      margin-top:$step * $k+rem;
      margin-bottom:$step * $k+rem;
    }
    .p-#{$pb}-#{$k} {padding:$step * $k+rem;}
    .pt-#{$pb}-#{$k} {padding-top:$step * $k+rem;}
    .pb-#{$pb}-#{$k} {padding-bottom:$step * $k+rem;}
    .pl-#{$pb}-#{$k} {padding-left:$step * $k+rem;}
    .pr-#{$pb}-#{$k} {padding-right:$step * $k+rem;}
    .px-#{$pb}-#{$k} {
      padding-right:$step * $k+rem;
      padding-left:$step * $k+rem;
    }
    .py-#{$pb}-#{$k} {
      padding-top:$step * $k+rem;
      padding-bottom:$step * $k+rem;
    }
  }
}

// grid
.container {
  width: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden;
}

.row {
  margin:0;
  @extend %clearfix;
}

@for $k from 0 through $columns {
  @if($k != 0) {
    .col-#{$k} {
      width: $k / $columns * 100%;
    }
    .col-#{$k},.col-sm-#{$k},.col-md-#{$k},.col-lg-#{$k},.col-xl-#{$k},.col-xs-#{$k} {
      @extend %col;
    }
  }
  @if($k <= 8) {
    .offset-#{$k} {
      margin-left:$k / $columns * 100%;
    }
  }
}

// display
.d-none {display:none;}
.d-block {display:block;}
.d-inline {display:inline;}
.d-inline-block {display:inline-block;}

//img
.fluid {
  width:100%;
  height:auto;
}

// marge inner / out
@for $k from 5 through $step {
  .m-#{$k} {margin:$step * $k+rem;}
  .mt-#{$k} {margin-top:$step * $k+rem;}
  .mb-#{$k} {margin-bottom:$step * $k+rem;}
  .ml-#{$k} {margin-left:$step * $k+rem;}
  .mr-#{$k} {margin-right:$step * $k+rem;}
  .mx-#{$k} {
    margin-right:$step * $k+rem;
    margin-left:$step * $k+rem;
  }
  .my-#{$k} {
    margin-top:$step * $k+rem;
    margin-bottom:$step * $k+rem;
  }
  .p-#{$k} {padding:$step * $k+rem;}
  .pt-#{$k} {padding-top:$step * $k+rem;}
  .pb-#{$k} {padding-bottom:$step * $k+rem;}
  .pl-#{$k} {padding-left:$step * $k+rem;}
  .pr-#{$k} {padding-right:$step * $k+rem;}
  .px-#{$k} {
    padding-right:$step * $k+rem;
    padding-left:$step * $k+rem;
  }
  .py-#{$k} {
    padding-top:$step * $k+rem;
    padding-bottom:$step * $k+rem;
  }
}



// media {mobile first}
@media only screen and (min-width: $sm) {
  @include prefix('sm');
}
@media only screen and (min-width: $md) {
  @include prefix('md');
}

@media only screen and (min-width: $lg) {
  @include prefix('lg');
}

@media only screen and (min-width: $xl) {
  @include prefix('xl');
}

@media (min-width: $xs) and (max-width:$sm) {
  @include prefix('xs');
}
